<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0721.1350                               -->
<workbook original-version='18.1' source-build='2020.2.4 (20202.20.0721.1350)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='covid_19_india' inline='true' name='federated.03d6odj12wjeu9111ai210zm5eye' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_19_india' name='textscan.1ku5vo20uptyde0zkc7zf0wxox00'>
            <connection class='textclean' cleaning='yes' compat='no' csvFile='C:/Users/Admin/Desktop/Tableau/Tableau Projects/COVID-19/covid_19_india.csv' dataRefreshTime='' directory='C:/Users/Admin/Desktop/Tableau/Tableau Projects/COVID-19' filename='C:/Users/Admin/AppData/Local/Temp/TableauTemp/0hd88wi1hsjamm11q2law17raiy6/covid_19_india.csv.xlsx' interpretationMode='8' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1ku5vo20uptyde0zkc7zf0wxox00' name='covid_19_india.csv' table='[covid_19_india#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:I5862:no:A1:I5862:1' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Sno' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Time' ordinal='2' />
            <column datatype='string' name='State/UnionTerritory' ordinal='3' />
            <column datatype='integer' name='ConfirmedIndianNational' ordinal='4' />
            <column datatype='integer' name='ConfirmedForeignNational' ordinal='5' />
            <column datatype='integer' name='Cured' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='integer' name='Confirmed' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1ku5vo20uptyde0zkc7zf0wxox00' name='covid_19_india.csv' table='[covid_19_india#csv$]' type='table'>
          <columns character-set='UTF-8' gridOrigin='A1:I5862:no:A1:I5862:1' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='Sno' ordinal='0' />
            <column datatype='date' name='Date' ordinal='1' />
            <column datatype='string' name='Time' ordinal='2' />
            <column datatype='string' name='State/UnionTerritory' ordinal='3' />
            <column datatype='integer' name='ConfirmedIndianNational' ordinal='4' />
            <column datatype='integer' name='ConfirmedForeignNational' ordinal='5' />
            <column datatype='integer' name='Cured' ordinal='6' />
            <column datatype='integer' name='Deaths' ordinal='7' />
            <column datatype='integer' name='Confirmed' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I5862:no:A1:I5862:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>30197</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sno</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sno]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Sno</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_400BFE739C524E5FB5FAD8B960C634A6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_400BFE739C524E5FB5FAD8B960C634A6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Time</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Time]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Time</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_400BFE739C524E5FB5FAD8B960C634A6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/UnionTerritory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/UnionTerritory]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>State/UnionTerritory</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_400BFE739C524E5FB5FAD8B960C634A6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedIndianNational</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ConfirmedIndianNational]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedIndianNational</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_400BFE739C524E5FB5FAD8B960C634A6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ConfirmedForeignNational</remote-name>
            <remote-type>20</remote-type>
            <local-name>[ConfirmedForeignNational]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>ConfirmedForeignNational</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_400BFE739C524E5FB5FAD8B960C634A6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cured</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cured]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Cured</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_400BFE739C524E5FB5FAD8B960C634A6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_400BFE739C524E5FB5FAD8B960C634A6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[covid_19_india.csv]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_india.csv_400BFE739C524E5FB5FAD8B960C634A6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Confirmed Foreign National' datatype='integer' name='[ConfirmedForeignNational]' role='dimension' type='ordinal' />
      <column caption='Confirmed Indian National' datatype='integer' name='[ConfirmedIndianNational]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Sno]' role='measure' type='quantitative' />
      <column datatype='string' name='[State/UnionTerritory (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State/UnionTerritory]' new-bin='true'>
          <bin default-name='false' value='&quot;Telangana (Total)&quot;'>
            <value>&quot;Telangana***&quot;</value>
            <value>&quot;Telengana&quot;</value>
            <value>&quot;Telengana***&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Dadar Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
          <semantic-value key='&quot;Dadra and Nagar Haveli and Daman and Diu&quot;' value='&quot;Daman and Diu&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[Time]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_19_india.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_india.csv_400BFE739C524E5FB5FAD8B960C634A6]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[covid_19_india.csv_400BFE739C524E5FB5FAD8B960C634A6]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:covid_19_india.csv_400BFE739C524E5FB5FAD8B960C634A6:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Attribute' name='[attr:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[cum:sum:Confirmed:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[Confirmed]' derivation='None' name='[none:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Time]' derivation='None' name='[none:Time:nk]' pivot='key' type='nominal' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[pcdf:sum:Confirmed:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Cured]' derivation='Sum' name='[pcdf:sum:Cured:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Confirmed]' derivation='Sum' name='[pcrk:sum:Confirmed:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Cured]' derivation='Sum' name='[pcrk:sum:Cured:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Deaths]' derivation='Sum' name='[pcrk:sum:Deaths:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Ascending' type='PctRank' />
      </column-instance>
      <column-instance column='[Deaths]' derivation='Sum' name='[pcto:sum:Deaths:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Confirmed]' derivation='Sum' name='[rank:sum:Confirmed:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sno]' derivation='Sum' name='[sum:Sno:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Confirmed]' derivation='Sum' name='[win:sum:Confirmed:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Avg' from='-2' ordering-type='Rows' to='0' type='WindowTotal' window-options='IncludeCurrent' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.03d6odj12wjeu9111ai210zm5eye].[attr:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.03d6odj12wjeu9111ai210zm5eye].[cum:sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.03d6odj12wjeu9111ai210zm5eye].[none:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.03d6odj12wjeu9111ai210zm5eye].[pcdf:sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.03d6odj12wjeu9111ai210zm5eye].[pcrk:sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.03d6odj12wjeu9111ai210zm5eye].[rank:sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.03d6odj12wjeu9111ai210zm5eye].[win:sum:Confirmed:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Sno:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.03d6odj12wjeu9111ai210zm5eye].[pcrk:sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.03d6odj12wjeu9111ai210zm5eye].[pcto:sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.03d6odj12wjeu9111ai210zm5eye].[pcdf:sum:Cured:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.03d6odj12wjeu9111ai210zm5eye].[pcrk:sum:Cured:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Deaths:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Cured:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.03d6odj12wjeu9111ai210zm5eye].[__tableau_internal_object_id__].[cnt:covid_19_india.csv_400BFE739C524E5FB5FAD8B960C634A6:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Time:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;5:00 PM&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;8:30 PM&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;8:00 AM&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;10:00 AM&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7:30 PM&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;9:30 PM&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;6:00 PM&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[State/UnionTerritory (group)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Dadar Nagar Haveli&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Puducherry&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Andaman and Nicobar Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ladakh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uttarakhand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bihar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Meghalaya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Goa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamil Nadu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dadra and Nagar Haveli and Daman and Diu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Punjab&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cases being reassigned to states&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mizoram&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Karnataka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Unassigned&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andhra Pradesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madhya Pradesh&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;West Bengal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Telengana***&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nagaland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gujarat&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Telangana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haryana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Telangana (Total)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Telangana***&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jharkhand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tripura&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kerala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uttar Pradesh&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Daman &amp; Diu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chhattisgarh&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Odisha&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Himachal Pradesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Telengana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Delhi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sikkim&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Assam&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Manipur&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_19_india.csv' id='covid_19_india.csv_400BFE739C524E5FB5FAD8B960C634A6'>
            <properties context=''>
              <relation connection='textscan.1ku5vo20uptyde0zkc7zf0wxox00' name='covid_19_india.csv' table='[covid_19_india#csv$]' type='table'>
                <columns character-set='UTF-8' gridOrigin='A1:I5862:no:A1:I5862:1' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='Sno' ordinal='0' />
                  <column datatype='date' name='Date' ordinal='1' />
                  <column datatype='string' name='Time' ordinal='2' />
                  <column datatype='string' name='State/UnionTerritory' ordinal='3' />
                  <column datatype='integer' name='ConfirmedIndianNational' ordinal='4' />
                  <column datatype='integer' name='ConfirmedForeignNational' ordinal='5' />
                  <column datatype='integer' name='Cured' ordinal='6' />
                  <column datatype='integer' name='Deaths' ordinal='7' />
                  <column datatype='integer' name='Confirmed' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Cured vs Death cases by Month'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.03d6odj12wjeu9111ai210zm5eye' />
          </datasources>
          <datasource-dependencies datasource='federated.03d6odj12wjeu9111ai210zm5eye'>
            <column datatype='integer' name='[Cured]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State/UnionTerritory]' new-bin='true'>
                <bin default-name='false' value='&quot;Telangana (Total)&quot;'>
                  <value>&quot;Telangana***&quot;</value>
                  <value>&quot;Telengana&quot;</value>
                  <value>&quot;Telengana***&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
                <semantic-value key='&quot;Dadra and Nagar Haveli and Daman and Diu&quot;' value='&quot;Daman and Diu&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Cured]' derivation='Sum' name='[sum:Cured:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03d6odj12wjeu9111ai210zm5eye].[State/UnionTerritory (group)]'>
            <groupfilter from='&quot;Andaman and Nicobar Islands&quot;' function='range' level='[State/UnionTerritory (group)]' to='&quot;West Bengal&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.03d6odj12wjeu9111ai210zm5eye].[State/UnionTerritory (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Deaths:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Deaths:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Cured:qk]' scope='rows' value='Cured/Death Cases' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.03d6odj12wjeu9111ai210zm5eye].[mn:Date:ok]' value='33' />
            <format attr='width' field='[federated.03d6odj12wjeu9111ai210zm5eye].[mn:Date:ok]' value='81' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.03d6odj12wjeu9111ai210zm5eye].[mn:Date:ok]' value='124' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.03d6odj12wjeu9111ai210zm5eye].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c290b4' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='729' />
                <format attr='maxwidth' value='729' />
                <format attr='minheight' value='359' />
                <format attr='maxheight' value='359' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='689' />
                <format attr='maxwidth' value='689' />
                <format attr='minheight' value='297' />
                <format attr='maxheight' value='297' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Cured:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.03d6odj12wjeu9111ai210zm5eye].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c290b4' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='689' />
                <format attr='maxwidth' value='689' />
                <format attr='minheight' value='297' />
                <format attr='maxheight' value='297' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='689' />
                <format attr='maxwidth' value='689' />
                <format attr='minheight' value='297' />
                <format attr='maxheight' value='297' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <color column='[federated.03d6odj12wjeu9111ai210zm5eye].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c290b4' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='689' />
                <format attr='maxwidth' value='689' />
                <format attr='minheight' value='297' />
                <format attr='maxheight' value='297' />
                <format attr='aspect' value='0' />
                <format attr='minwidth' value='689' />
                <format attr='maxwidth' value='689' />
                <format attr='minheight' value='297' />
                <format attr='maxheight' value='297' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.03d6odj12wjeu9111ai210zm5eye].[sum:Cured:qk] + [federated.03d6odj12wjeu9111ai210zm5eye].[sum:Deaths:qk])</rows>
        <cols>[federated.03d6odj12wjeu9111ai210zm5eye].[mn:Date:ok]</cols>
      </table>
      <simple-id uuid='{C7F74EDD-9FC1-4ABF-BF73-9688007948FA}' />
    </worksheet>
    <worksheet name='Number of Confirmed Cases by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.03d6odj12wjeu9111ai210zm5eye' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.03d6odj12wjeu9111ai210zm5eye'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State/UnionTerritory]' new-bin='true'>
                <bin default-name='false' value='&quot;Telangana (Total)&quot;'>
                  <value>&quot;Telangana***&quot;</value>
                  <value>&quot;Telengana&quot;</value>
                  <value>&quot;Telengana***&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
                <semantic-value key='&quot;Dadra and Nagar Haveli and Daman and Diu&quot;' value='&quot;Daman and Diu&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.03d6odj12wjeu9111ai210zm5eye].[Longitude (generated)]' field-type='quantitative' max='11056269.406932034' min='6785637.4685091712' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.03d6odj12wjeu9111ai210zm5eye].[Latitude (generated)]' field-type='quantitative' max='4108288.0026638154' min='1474008.4315679255' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Confirmed:qk]' value='left' />
            <format attr='wrap' field='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Confirmed:qk]' value='auto' />
            <format attr='text-orientation' field='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Confirmed:qk]' value='0' />
            <format attr='font-weight' field='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Confirmed:qk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.03d6odj12wjeu9111ai210zm5eye].[State/UnionTerritory (group)]' value='-90' />
            <format attr='font-weight' scope='cols' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Confirmed:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Confirmed:qk]' />
              <text column='[federated.03d6odj12wjeu9111ai210zm5eye].[State/UnionTerritory (group)]' />
              <text column='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Confirmed:qk]' />
              <lod column='[federated.03d6odj12wjeu9111ai210zm5eye].[State/UnionTerritory (group)]' />
              <geometry column='[federated.03d6odj12wjeu9111ai210zm5eye].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03d6odj12wjeu9111ai210zm5eye].[Latitude (generated)]</rows>
        <cols>[federated.03d6odj12wjeu9111ai210zm5eye].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4142AD4A-9FFB-4C81-8A55-712A6B4755C8}' />
    </worksheet>
    <worksheet name='Number of Deaths in each state'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.03d6odj12wjeu9111ai210zm5eye' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.03d6odj12wjeu9111ai210zm5eye'>
            <column datatype='integer' name='[Deaths]' role='measure' type='quantitative' />
            <column datatype='string' name='[State/UnionTerritory (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State/UnionTerritory]' new-bin='true'>
                <bin default-name='false' value='&quot;Telangana (Total)&quot;'>
                  <value>&quot;Telangana***&quot;</value>
                  <value>&quot;Telengana&quot;</value>
                  <value>&quot;Telengana***&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State/UnionTerritory]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Dadar Nagar Haveli&quot;' value='&quot;Dadra and Nagar Haveli&quot;' />
                <semantic-value key='&quot;Dadra and Nagar Haveli and Daman and Diu&quot;' value='&quot;Daman and Diu&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Deaths]' derivation='Sum' name='[sum:Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Deaths:qk]' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Deaths:qk]' />
              <lod column='[federated.03d6odj12wjeu9111ai210zm5eye].[State/UnionTerritory (group)]' />
              <size column='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.2430939674377441' />
                <format attr='has-stroke' value='true' />
                <format attr='stroke-color' value='#000000' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03d6odj12wjeu9111ai210zm5eye].[Latitude (generated)]</rows>
        <cols>[federated.03d6odj12wjeu9111ai210zm5eye].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{7B461B76-EF00-4A20-B30F-CDF33A7601E0}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{823C80A6-9EB9-45FE-A765-B1B23B36158C}' />
    </worksheet>
    <worksheet name='Upsurge in Corona Cases (January - September)'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_india' name='federated.03d6odj12wjeu9111ai210zm5eye' />
          </datasources>
          <datasource-dependencies datasource='federated.03d6odj12wjeu9111ai210zm5eye'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[cum:sum:Confirmed:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Date]' derivation='Month' name='[mn:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Confirmed:qk]' />
              <text column='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Confirmed:qk]' />
              <lod column='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Confirmed:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03d6odj12wjeu9111ai210zm5eye].[cum:sum:Confirmed:qk]</rows>
        <cols>[federated.03d6odj12wjeu9111ai210zm5eye].[mn:Date:ok]</cols>
      </table>
      <simple-id uuid='{5F923B12-6CE0-4141-90D6-FEF5AC6366B2}' />
    </worksheet>
  </worksheets>
  <windows source-height='31'>
    <window class='worksheet' maximized='true' name='Upsurge in Corona Cases (January - September)'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03d6odj12wjeu9111ai210zm5eye].[mn:Date:ok]</field>
            <field>[federated.03d6odj12wjeu9111ai210zm5eye].[none:Time:nk]</field>
            <field>[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Confirmed:qk]</field>
            <field>[federated.03d6odj12wjeu9111ai210zm5eye].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F76563F6-0AEB-4AB0-A3D6-15C66A621EDE}' />
    </window>
    <window class='worksheet' name='Cured vs Death cases by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='6' param='[federated.03d6odj12wjeu9111ai210zm5eye].[:Measure Names]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03d6odj12wjeu9111ai210zm5eye].[State/UnionTerritory (group)]</field>
            <field>[federated.03d6odj12wjeu9111ai210zm5eye].[mn:Date:ok]</field>
            <field>[federated.03d6odj12wjeu9111ai210zm5eye].[none:Time:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C56832C-167E-466C-9F98-DD33191BA7E3}' />
    </window>
    <window class='worksheet' name='Number of Confirmed Cases by State'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='38'>
            <card type='columns' />
          </strip>
          <strip size='38'>
            <card type='rows' />
          </strip>
          <strip size='38'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03d6odj12wjeu9111ai210zm5eye].[State/UnionTerritory (group)]</field>
            <field>[federated.03d6odj12wjeu9111ai210zm5eye].[none:State/UnionTerritory:nk]</field>
            <field>[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Confirmed:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{58952C8B-5989-47B6-865B-D2D325ED67A5}' />
    </window>
    <window class='worksheet' name='Number of Deaths in each state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.03d6odj12wjeu9111ai210zm5eye].[sum:Deaths:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{ED0A0B14-CB43-429D-AF46-EFCB6072DF2E}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1815A838-325B-4F23-8A2A-A22866D4E085}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Cured vs Death cases by Month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of Confirmed Cases by State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Number of Deaths in each state' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Upsurge in Corona Cases (January - September)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
